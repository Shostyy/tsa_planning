{"ast":null,"code":"var _jsxFileName = \"/Users/anatolijsostal/projects/tsa_planning/src/components/Filter.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useTable, useFilters } from \"react-table\";\nimport someData from \"../staticData.json\";\nimport \"./Filter.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Filter = () => {\n  _s();\n  const tableData = React.useMemo(() => someData, []);\n  const columns = React.useMemo(() => [{\n    Header: \"ID Транзакції\",\n    accessor: \"id\"\n  }, {\n    Header: \"Дата транзакції\",\n    accessor: \"date\"\n  }, {\n    Header: \"Ім'я\",\n    accessor: \"name\"\n  }, {\n    Header: \"Вартість\",\n    accessor: \"amount\"\n  }, {\n    Header: \"Час транзакції\",\n    accessor: \"time\"\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state,\n    setFilter\n  } = useTable({\n    columns,\n    data: tableData\n  }, useFilters);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"table-container\",\n      children: \"\\u0424\\u0456\\u043B\\u044C\\u0442\\u0440\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"div\", {\n        ...headerGroup.getHeaderGroupProps(),\n        className: \"filter-header\",\n        children: headerGroup.headers.map(column => {\n          var _state$filters$find;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: column.render(\"Header\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: ((_state$filters$find = state.filters.find(f => f.id === column.id)) === null || _state$filters$find === void 0 ? void 0 : _state$filters$find.value) || \"\",\n              onChange: e => {\n                setFilter(column.id, e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this)]\n          }, column.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this);\n        })\n      }, headerGroup.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      className: \"full-width-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            children: column.render(\"Header\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 44\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(Filter, \"3RUZbJ9usnzHjPiOUsjUG75HfUU=\", false, function () {\n  return [useTable];\n});\n_c = Filter;\nvar _c;\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"names":["React","useTable","useFilters","someData","jsxDEV","_jsxDEV","Filter","_s","tableData","useMemo","columns","Header","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","state","setFilter","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","headerGroup","getHeaderGroupProps","headers","column","_state$filters$find","render","value","filters","find","f","id","onChange","e","target","getHeaderProps","row","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["/Users/anatolijsostal/projects/tsa_planning/src/components/Filter.jsx"],"sourcesContent":["import React from \"react\";\nimport { useTable, useFilters } from \"react-table\";\nimport someData from \"../staticData.json\";\nimport \"./Filter.scss\";\n\nexport const Filter = () => {\n    const tableData = React.useMemo(() => someData, []);\n    const columns = React.useMemo(() => [\n        {\n            Header: \"ID Транзакції\",\n            accessor: \"id\",\n        },\n        {\n            Header: \"Дата транзакції\",\n            accessor: \"date\",\n        },\n        {\n            Header: \"Ім'я\",\n            accessor: \"name\",\n        },\n        {\n            Header: \"Вартість\",\n            accessor: \"amount\",\n        },\n        {\n            Header: \"Час транзакції\",\n            accessor: \"time\",\n        },\n    ], []);\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        state,\n        setFilter,\n    } = useTable(\n        {\n            columns,\n            data: tableData,\n        },\n        useFilters\n    );\n\n    return (\n        <div className=\"table-container\">\n            <h2 className=\"table-container\">Фільтри</h2>\n            <div className=\"filters\">\n                {headerGroups.map((headerGroup) => (\n                    <div key={headerGroup.id} {...headerGroup.getHeaderGroupProps()} className=\"filter-header\">\n                        {headerGroup.headers.map((column) => (\n                            <div key={column.id} className=\"filter-column\">\n                                <span>{column.render(\"Header\")}</span>\n                                <input\n                                    value={state.filters.find((f) => f.id === column.id)?.value || \"\"}\n                                    onChange={(e) => {\n                                        setFilter(column.id, e.target.value);\n                                    }}\n                                />\n                            </div>\n                        ))}\n                    </div>\n                ))}\n            </div>\n            <table {...getTableProps()} className=\"full-width-table\">\n                <thead>\n                    {headerGroups.map((headerGroup) => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map((column) => (\n                                <th {...column.getHeaderProps()}>\n                                    {column.render(\"Header\")}\n                                </th>\n                            ))}\n                        </tr>\n                    ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                    {rows.map(row => {\n                        prepareRow(row);\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {row.cells.map(cell => {\n                                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>;\n                                })}\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}