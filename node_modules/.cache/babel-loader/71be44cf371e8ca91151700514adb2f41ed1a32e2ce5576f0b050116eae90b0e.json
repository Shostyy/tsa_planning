{"ast":null,"code":"var _jsxFileName = \"/Users/anatolijsostal/projects/tsa_planning/src/components/Chart1.jsx\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Chart1 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      series: [{\n        name: \"High - 2013\",\n        data: [28, 29, 33, 36, 32, 32, 33]\n      }, {\n        name: \"Low - 2013\",\n        data: [12, 11, 14, 18, 17, 13, 13]\n      }, {\n        name: \"High Average\",\n        data: this.calculateAverage([28, 29, 33, 36, 32, 32, 33]) // Calculate the high average\n      }, {\n        name: \"Low Average\",\n        data: this.calculateAverage([12, 11, 14, 18, 17, 13, 13]) // Calculate the low average\n      }],\n\n      options: {\n        chart: {\n          height: 350,\n          width: 1500,\n          type: 'line',\n          dropShadow: {\n            enabled: true,\n            color: '#000',\n            top: 18,\n            left: 7,\n            blur: 10,\n            opacity: 0.2\n          },\n          stroke: {\n            width: [1, 1, 1, 1],\n            // Set the width for all lines (you can adjust as needed)\n            dashArray: [0, 5, 5, 5] // Set the dash pattern for each line (0 means solid)\n          },\n\n          toolbar: {\n            show: false\n          }\n        }\n      }\n    };\n  }\n  calculateAverage(data) {\n    const sum = data.reduce((total, value) => total + value, 0);\n    const average = sum / data.length;\n    return Array(data.length).fill(average);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chart 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chart\",\n        style: {\n          width: '800px'\n        },\n        children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n          options: this.state.options,\n          series: this.state.series,\n          type: \"line\",\n          height: 350\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst domContainer = document.querySelector(\"#root\");\nReactDOM.render( /*#__PURE__*/React.createElement(Chart1), domContainer);","map":{"version":3,"names":["React","ReactDOM","ReactApexChart","jsxDEV","_jsxDEV","Chart1","Component","constructor","props","state","series","name","data","calculateAverage","options","chart","height","width","type","dropShadow","enabled","color","top","left","blur","opacity","stroke","dashArray","toolbar","show","sum","reduce","total","value","average","length","Array","fill","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","style","domContainer","document","querySelector","createElement"],"sources":["/Users/anatolijsostal/projects/tsa_planning/src/components/Chart1.jsx"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactApexChart from \"react-apexcharts\";\n\nexport class Chart1 extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      series: [\n        {\n          name: \"High - 2013\",\n          data: [28, 29, 33, 36, 32, 32, 33]\n        },\n        {\n          name: \"Low - 2013\",\n          data: [12, 11, 14, 18, 17, 13, 13]\n        },\n        {\n            name: \"High Average\",\n            data: this.calculateAverage([28, 29, 33, 36, 32, 32, 33]) // Calculate the high average\n          },\n          {\n            name: \"Low Average\",\n            data: this.calculateAverage([12, 11, 14, 18, 17, 13, 13]) // Calculate the low average\n          },\n      ],\n      options: {\n        chart: {\n          height: 350,\n          width: 1500,\n          type: 'line',\n          dropShadow: {\n            enabled: true,\n            color: '#000',\n            top: 18,\n            left: 7,\n            blur: 10,\n            opacity: 0.2\n          },\n          stroke: {\n            width: [1, 1, 1, 1], // Set the width for all lines (you can adjust as needed)\n            dashArray: [0, 5, 5, 5], // Set the dash pattern for each line (0 means solid)\n          },\n          toolbar: {\n            show: false\n          }\n        },\n      }\n    };\n  }\n\n  calculateAverage(data) {\n    const sum = data.reduce((total, value) => total + value, 0);\n    const average = sum / data.length;\n  \n    return Array(data.length).fill(average);\n  }\n  \n  render() {\n    return (\n      <div className=\"chart-container\">\n        <h2>Chart 1</h2>\n        <div id=\"chart\" style={{ width: '800px' }}>\n          <ReactApexChart\n            options={this.state.options}\n            series={this.state.series}\n            type=\"line\"\n            height={350}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst domContainer = document.querySelector(\"#root\");\nReactDOM.render(React.createElement(Chart1), domContainer);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}