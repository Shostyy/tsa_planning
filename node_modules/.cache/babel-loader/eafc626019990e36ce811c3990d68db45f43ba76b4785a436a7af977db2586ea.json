{"ast":null,"code":"var _jsxFileName = \"/Users/anatolijsostal/projects/tsa_planning/src/Filter.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useTable } from \"react-table\";\nimport someData from \"./staticData.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Filter = () => {\n  _s();\n  const tableData = React.useMemo(() => someData, []);\n  const columns = React.useMemo(() => [{\n    Header: \"Transaction ID\",\n    accessor: \"id\"\n  }, {\n    Header: \"Transaction date\",\n    accessor: \"date\"\n  }, {\n    Header: \"Name\",\n    accessor: \"name\"\n  }, {\n    Header: \"Value\",\n    accessor: \"Amount\"\n  }, {\n    Header: \"Transaction time\",\n    accessor: \"Time\"\n  }]);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    tableData\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        ...getTableProps,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => {\n            /*#__PURE__*/_jsxDEV(\"tr\", {\n              ...headerGroup.getHeaderGroupProps,\n              children: headerGroups.header.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n                ...column.getGe\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Filter, \"bHlLXsN0YIlGHXelRVif9X8pBdw=\", false, function () {\n  return [useTable];\n});\n_c = Filter;\nvar _c;\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"names":["React","useTable","someData","jsxDEV","_jsxDEV","Fragment","_Fragment","Filter","_s","tableData","useMemo","columns","Header","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","children","className","map","headerGroup","getHeaderGroupProps","header","column","getGe","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/anatolijsostal/projects/tsa_planning/src/Filter.jsx"],"sourcesContent":["import React from \"react\";\nimport { useTable } from \"react-table\";\nimport someData from \"./staticData.json\";\n\nexport const Filter = () => {\n    const tableData = React.useMemo(() => someData, []);\n    const columns = React.useMemo(() => [\n        {\n            Header: \"Transaction ID\",\n            accessor: \"id\",\n        },\n        {\n            Header: \"Transaction date\",\n            accessor: \"date\",\n        },\n        {\n            Header: \"Name\",\n            accessor: \"name\",\n        },\n        {\n            Header: \"Value\",\n            accessor: \"Amount\",\n        },\n        {\n            Header: \"Transaction time\",\n            accessor: \"Time\",\n        },\n    ]);\n\n    const {getTableProps, getTableBodyProps, headerGroups, rows, prepareRow} = useTable({columns, tableData});\n    return (\n        <> \n            <div className=\"table\">\n                <table {...getTableProps}>\n                    <thead>\n                        {headerGroups.map((headerGroup) => {\n                            <tr {...headerGroup.getHeaderGroupProps}>\n                                {headerGroups.header.map((column) => (\n                                    <th {...column.getGe}>\n\n                                    </th>\n                                ))}\n                            </tr>\n                        })}\n                    </thead>\n                    <tbody>\n\n                    </tbody>\n                </table>\n            </div>\n        </>\n    );\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,QAAQ,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzC,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,SAAS,GAAGT,KAAK,CAACU,OAAO,CAAC,MAAMR,QAAQ,EAAE,EAAE,CAAC;EACnD,MAAMS,OAAO,GAAGX,KAAK,CAACU,OAAO,CAAC,MAAM,CAChC;IACIE,MAAM,EAAE,gBAAgB;IACxBC,QAAQ,EAAE;EACd,CAAC,EACD;IACID,MAAM,EAAE,kBAAkB;IAC1BC,QAAQ,EAAE;EACd,CAAC,EACD;IACID,MAAM,EAAE,MAAM;IACdC,QAAQ,EAAE;EACd,CAAC,EACD;IACID,MAAM,EAAE,OAAO;IACfC,QAAQ,EAAE;EACd,CAAC,EACD;IACID,MAAM,EAAE,kBAAkB;IAC1BC,QAAQ,EAAE;EACd,CAAC,CACJ,CAAC;EAEF,MAAM;IAACC,aAAa;IAAEC,iBAAiB;IAAEC,YAAY;IAAEC,IAAI;IAAEC;EAAU,CAAC,GAAGjB,QAAQ,CAAC;IAACU,OAAO;IAAEF;EAAS,CAAC,CAAC;EACzG,oBACIL,OAAA,CAAAE,SAAA;IAAAa,QAAA,eACIf,OAAA;MAAKgB,SAAS,EAAC,OAAO;MAAAD,QAAA,eAClBf,OAAA;QAAA,GAAWU,aAAa;QAAAK,QAAA,gBACpBf,OAAA;UAAAe,QAAA,EACKH,YAAY,CAACK,GAAG,CAAEC,WAAW,IAAK;YAC/B,aAAAlB,OAAA;cAAA,GAAQkB,WAAW,CAACC,mBAAmB;cAAAJ,QAAA,EAClCH,YAAY,CAACQ,MAAM,CAACH,GAAG,CAAEI,MAAM,iBAC5BrB,OAAA;gBAAA,GAAQqB,MAAM,CAACC;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEhB,CACP;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC;UACT,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACR1B,OAAA;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC,gBACR,CAAC;AAEX,CAAC;AAAAtB,EAAA,CAhDYD,MAAM;EAAA,QAyB4DN,QAAQ;AAAA;AAAA8B,EAAA,GAzB1ExB,MAAM;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}