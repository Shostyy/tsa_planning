{"ast":null,"code":"var _jsxFileName = \"/Users/anatolijsostal/projects/tsa_planning/src/Filter.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \".\";\nimport { useTable } from \"react-table\";\nimport someData from \"./staticData.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Filter = () => {\n  _s();\n  const tableData = React.useMemo(() => someData, []);\n  const columns = React.useMemo(() => [{\n    Header: \"Transaction ID\",\n    accessor: \"id\"\n  }, {\n    Header: \"Transaction date\",\n    accessor: \"date\"\n  }, {\n    Header: \"Name\",\n    accessor: \"name\"\n  }, {\n    Header: \"Value\",\n    accessor: \"amount\"\n  }, {\n    Header: \"Transaction time\",\n    accessor: \"time\"\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data: tableData\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            children: column.render(\"Header\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 44\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(Filter, \"52tMiea9Jvy9DXMhrtXf7D2AWnU=\", false, function () {\n  return [useTable];\n});\n_c = Filter;\nvar _c;\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"names":["React","useTable","someData","jsxDEV","_jsxDEV","Filter","_s","tableData","useMemo","columns","Header","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","data","className","children","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","fileName","_jsxFileName","lineNumber","columnNumber","row","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["/Users/anatolijsostal/projects/tsa_planning/src/Filter.jsx"],"sourcesContent":["import React from \"react\";\nimport \".\"\nimport { useTable } from \"react-table\";\nimport someData from \"./staticData.json\";\n\nexport const Filter = () => {\n    const tableData = React.useMemo(() => someData, []);\n    const columns = React.useMemo(() => [\n        {\n            Header: \"Transaction ID\",\n            accessor: \"id\",\n        },\n        {\n            Header: \"Transaction date\",\n            accessor: \"date\",\n        },\n        {\n            Header: \"Name\",\n            accessor: \"name\",\n        },\n        {\n            Header: \"Value\",\n            accessor: \"amount\",\n        },\n        {\n            Header: \"Transaction time\",\n            accessor: \"time\",\n        },\n    ], []);\n\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = useTable({\n        columns,\n        data: tableData\n    });\n\n    return (\n        <div className=\"table\">\n            <table {...getTableProps()}>\n                <thead>\n                    {headerGroups.map((headerGroup) => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map((column) => (\n                                <th {...column.getHeaderProps()}>\n                                    {column.render(\"Header\")}\n                                </th>\n                            ))}\n                        </tr>\n                    ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                    {rows.map(row => {\n                        prepareRow(row);\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {row.cells.map(cell => {\n                                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>;\n                                })}\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}