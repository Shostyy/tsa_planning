[{"/Users/anatolijsostal/projects/tsa_planning/src/index.js":"1","/Users/anatolijsostal/projects/tsa_planning/src/App.jsx":"2","/Users/anatolijsostal/projects/tsa_planning/src/components/LoginPopup.jsx":"3","/Users/anatolijsostal/projects/tsa_planning/src/components/Main.jsx":"4","/Users/anatolijsostal/projects/tsa_planning/src/components/Header.jsx":"5","/Users/anatolijsostal/projects/tsa_planning/src/components/Footer.jsx":"6"},{"size":146,"mtime":1695706926540,"results":"7","hashOfConfig":"8"},{"size":443,"mtime":1695706926539,"results":"9","hashOfConfig":"8"},{"size":2154,"mtime":1695706926540,"results":"10","hashOfConfig":"8"},{"size":3325,"mtime":1695706926540,"results":"11","hashOfConfig":"8"},{"size":1654,"mtime":1695706926540,"results":"12","hashOfConfig":"8"},{"size":218,"mtime":1695706926540,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4fmr2x",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"/Users/anatolijsostal/projects/tsa_planning/src/index.js",[],[],"/Users/anatolijsostal/projects/tsa_planning/src/App.jsx",[],[],"/Users/anatolijsostal/projects/tsa_planning/src/components/LoginPopup.jsx",["36","37","38","39","40","41"],[],"import React, { useEffect, useState } from \"react\";\nimport './LoginPopup.scss';\n\nexport const LoginPopup = () => {\n    const [cookieExists, setCookieExists] = useState(() => {\n        const cookies = document.cookie.split(';');\n        return cookies.some(cookie => cookie.trim().startsWith('login='));\n    });\n\n    const setCookie = () => {\n        const expirationDate = new Date();\n        expirationDate.setDate(expirationDate.getDate() + 1);\n        document.cookie = `login=true; expires=${expirationDate}; path=/;`;\n        setCookieExists(true);\n        const forceUpdate = () => {\n            setCookieExists(true);\n        };\n        forceUpdate();\n    };\n\n    const clearCookie = (cookieName) => {\n        const expirationDate = new Date();\n        expirationDate.setFullYear(expirationDate.getFullYear() - 1);\n        document.cookie = `${cookieName}=; expires=${expirationDate.toUTCString()}; path=/;`;\n        setCookieExists(false);\n        \n    };\n    \n    \n    return (\n        <div className=\"login-pop-up\" id=\"login-form\">\n            <div className=\"login-pop-up__description-block\">\n                <p className=\"login-pop-up__description-text\">\n                    Кабінет Клієнта\n                </p>\n                <a href=\"#\" className=\"login-pop-up__close-button\"></a>\n            </div>\n            <form action=\"#\" className=\"login-pop-up__form\">\n                <label htmlFor=\"login\" className=\"login-pop-up__label\">\n                    Логін\n                </label>\n                <input type=\"text\" id=\"login\" name=\"login\"  className=\"login-pop-up__input\"/>\n\n                <label htmlFor=\"password\" className=\"login-pop-up__label\">\n                    Пароль\n                </label>\n                <input type=\"password\" id=\"password\" name=\"password\"  className=\"login-pop-up__input\"/>\n                <button type=\"submit\" value=\"Submit\" className=\"login-pop-up__button\" onClick={setCookie}>Увійти</button>\n            </form>\n            <a href=\"#\" className=\"login-pop-up__refresh-password\">\n                Відновити пароль\n            </a>\n        </div>\n    );\n}","/Users/anatolijsostal/projects/tsa_planning/src/components/Main.jsx",["42","43","44","45","46","47"],[],"import React, { useEffect, useState }  from \"react\";\nimport ApexCharts from 'apexcharts'\nimport \"./Main.scss\";\n\nexport const Main = () => {\n    const [cookieExists, setCookieExists] = useState(false);\n    \n    useEffect(() => {\n        const checkCookie = () => {\n            const cookies = document.cookie.split(';');\n            for (let i = 0; i < cookies.length; i++) {\n                const cookie = cookies[i].trim();\n                if (cookie.startsWith('login=')) {\n                    setCookieExists(true);\n                    break;\n                }\n            }\n        };\n        checkCookie();\n    }, []);\n\n    /*apex charts*/\n    var options = {\n        series: [\n        {\n          name: \"High - 2013\",\n          data: [28, 29, 33, 36, 32, 32, 33]\n        },\n        {\n          name: \"Low - 2013\",\n          data: [12, 11, 14, 18, 17, 13, 13]\n        }\n      ],\n        chart: {\n        height: 350,\n        type: 'line',\n        dropShadow: {\n          enabled: true,\n          color: '#000',\n          top: 18,\n          left: 7,\n          blur: 10,\n          opacity: 0.2\n        },\n        toolbar: {\n          show: false\n        }\n      },\n      colors: ['#77B6EA', '#545454'],\n      dataLabels: {\n        enabled: true,\n      },\n      stroke: {\n        curve: 'smooth'\n      },\n      title: {\n        text: 'Average High & Low Temperature',\n        align: 'left'\n      },\n      grid: {\n        borderColor: '#e7e7e7',\n        row: {\n          colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\n          opacity: 0.5\n        },\n      },\n      markers: {\n        size: 1\n      },\n      xaxis: {\n        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n        title: {\n          text: 'Month'\n        }\n      },\n      yaxis: {\n        title: {\n          text: 'Temperature'\n        },\n        min: 5,\n        max: 40\n      },\n      legend: {\n        position: 'top',\n        horizontalAlign: 'right',\n        floating: true,\n        offsetY: -25,\n        offsetX: -5\n      }\n      };\n\n      var chart = new ApexCharts(document.getElementById(\"chart\"), options);\n      chart.render();\n    \n\n    return (\n       <main className=\"main\">\n        {cookieExists ? (\n            <div className=\"main__content\">\n                <nav className=\"left-sidebar\">\n                    <ul className=\"left-sidebar__list\">\n                        <li className=\"left-sidebar__item\">\n                            <a href=\"\" className=\"left-sidebar__link left-sidebar__link--open\"></a>\n                        </li>\n                        <li className=\"left-sidebar__item\">\n                            <a href=\"\" className=\"left-sidebar__link  left-sidebar__link--filter\"></a>\n                        </li>\n                        <li className=\"left-sidebar__item\">\n                            <a href=\"\" className=\"left-sidebar__link  left-sidebar__link--chart\"></a>\n                        </li>\n                    </ul>\n                </nav>\n                <div id=\"chart\">\n                </div>\n            </div>\n        ) : (\n            \n            <h1 className=\"main__header\">\n                Вітаємо в проекті\n                <br></br>\n                “Планування”\n            </h1>\n\n        )}\n       </main>\n    );\n}","/Users/anatolijsostal/projects/tsa_planning/src/components/Header.jsx",["48"],[],"import React, { useEffect, useState } from \"react\";\nimport './Header.scss';\n\nexport const Header = () => {\n    const [cookieExists, setCookieExists] = useState(false);\n\n    useEffect(() => {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            if (cookie.startsWith('login=')) {\n                setCookieExists(true);\n                break;\n            }\n        }\n    }, []);\n\n    const clearCookie = (cookieName) => {\n        const expirationDate = new Date();\n        expirationDate.setFullYear(expirationDate.getFullYear() - 1);\n        document.cookie = `${cookieName}=; expires=${expirationDate.toUTCString()}; path=/;`;\n    };\n\n    return (\n        <header className=\"header\">\n            <nav className=\"nav\">\n                <ul className=\"nav__list\">\n                    <li className=\"nav__item\">\n                        <a href=\"#\" className=\"nav__link nav__link--logo\">\n                        </a>\n                    </li>\n                    <li className=\"nav__item\">\n                        {cookieExists ? (\n                            <a href=\"#log-out\" className=\"nav__link nav__link--login\" onClick={() => clearCookie('login')}>\n                                Вийти\n                            </a>\n                        ) : (\n                            <a href=\"#login-form\" className=\"nav__link nav__link--login\">\n                                Ввійти\n                            </a>\n                        )}\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    );\n}\n","/Users/anatolijsostal/projects/tsa_planning/src/components/Footer.jsx",["49","50"],[],"import React, { useEffect, useState } from \"react\";\nimport './Footer.scss';\n\nexport const Footer = () => {\n    return (\n        <footer className=\"footer\">\n            Some footer text &copy;\n        </footer>\n    );\n}",{"ruleId":"51","severity":1,"message":"52","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":26},{"ruleId":"51","severity":1,"message":"55","line":5,"column":12,"nodeType":"53","messageId":"54","endLine":5,"endColumn":24},{"ruleId":"51","severity":1,"message":"56","line":21,"column":11,"nodeType":"53","messageId":"54","endLine":21,"endColumn":22},{"ruleId":"57","severity":1,"message":"58","line":36,"column":17,"nodeType":"59","endLine":36,"endColumn":68},{"ruleId":"60","severity":1,"message":"61","line":36,"column":17,"nodeType":"59","endLine":36,"endColumn":68},{"ruleId":"60","severity":1,"message":"61","line":50,"column":13,"nodeType":"59","endLine":50,"endColumn":68},{"ruleId":"57","severity":1,"message":"58","line":103,"column":29,"nodeType":"59","endLine":103,"endColumn":96},{"ruleId":"60","severity":1,"message":"61","line":103,"column":29,"nodeType":"59","endLine":103,"endColumn":96},{"ruleId":"57","severity":1,"message":"58","line":106,"column":29,"nodeType":"59","endLine":106,"endColumn":99},{"ruleId":"60","severity":1,"message":"61","line":106,"column":29,"nodeType":"59","endLine":106,"endColumn":99},{"ruleId":"57","severity":1,"message":"58","line":109,"column":29,"nodeType":"59","endLine":109,"endColumn":98},{"ruleId":"60","severity":1,"message":"61","line":109,"column":29,"nodeType":"59","endLine":109,"endColumn":98},{"ruleId":"60","severity":1,"message":"61","line":29,"column":25,"nodeType":"59","endLine":29,"endColumn":75},{"ruleId":"51","severity":1,"message":"52","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":26},{"ruleId":"51","severity":1,"message":"62","line":1,"column":28,"nodeType":"53","messageId":"54","endLine":1,"endColumn":36},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'cookieExists' is assigned a value but never used.","'clearCookie' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'useState' is defined but never used."]